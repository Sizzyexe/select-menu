
from email import message
import discord
from discord.ui import Modal, InputText, View, button
from discord.ext.pages import Page, Paginator, PageGroup
import os


from dotenv import load_dotenv
load_dotenv()




bot = discord.Bot(debug_guilds=[int(os.getenv("GUILD_ID"))])




pages = [
    PageGroup(
        pages=[
            Page(content="1"),
            Page(content="2"),
        ],
        label="Group 1"
    ),
    PageGroup(
        pages=[
            Page(content="3"),
            Page(content="4"),
            Page(content="5"),
        ],
        label="Group 2"
    )
]   

class SurveyModal(Modal):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs, title="–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –≤ —Å–µ–º—å—é Ant")

        self.add_item(InputText(
            label="–ù–∏–∫|–°—Ç–∞—Ç–∏–∫ –Ω–∞ Los Angeles|–ò–º—è –∏ –í–æ–∑—Ä–∞—Å—Ç",
            placeholder="–ü—Ä–∏–º–µ—Ä: Sizzy Ant | 300 | –ê–ª–µ–∫—Å–µ–π 19 –ª–µ—Ç",
            min_length=1,
            max_length=30
        ))

        self.add_item(InputText(
            label="–û–ø—ã—Ç RP —Å–µ—Ä–≤–µ—Ä–æ–≤ | –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –û–Ω–ª–∞–π–Ω",
            placeholder="–ö–∞–∫ —É–∑–Ω–∞–ª–∏ –æ –Ω–∞—Å?",
            min_length=1,
            max_length=100
        ))

        self.add_item(InputText(
            label="–í –∫–∞–∫–∏—Ö —Å–µ–º—å—è—Ö —Å–æ—Å—Ç–æ—è–ª–∏?",
            placeholder="–ü–æ –∫–∞–∫–æ–π –ø—Ä–∏—á–∏–Ω–µ –ø–æ–∫–∏–Ω—É–ª–∏?",
            min_length=1,
            max_length=100
        ))

        self.add_item(InputText(
            label="–ü–æ—á–µ–º—É –≤—ã–±—Ä–∞–ª–∏ –∏–º–µ–Ω–Ω–æ –Ω–∞—à—É —Ñ–∞–º—É?",
            placeholder="–ö–∞–∫—É—é –ø–æ–ª—å–∑—É —Å–º–æ–∂–µ—Ç–µ –ø—Ä–∏–Ω–µ—Å—Ç–∏ –Ω–∞—à–µ–π —Å–µ–º—å–µ?",
            min_length=1,
            max_length=400
        ))

        self.add_item(InputText(
            style=discord.InputTextStyle.multiline,
            label="–ö–∞–∫ –±—ã –≤—ã –æ—Ü–µ–Ω–∏–ª–∏ —Å–≤–æ–π –Ω–∞–≤—ã–∫ —Å—Ç—Ä–µ–ª—å–±—ã?",
            placeholder="–í–∏–¥–µ–æ(–æ—Ç–∫–∞—Ç —Å –ª—é–±–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, —Ñ–∞–π—Ç–∞, –∫—Ä–∞–π–Ω–∏–π —Å–ª—É—á–∞–π - –ì–ì)–ë–µ–∑ –æ—Ç–∫–∞—Ç–∞ –∑–∞—è–≤–∫–∞ –±—É–¥–µ—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞!",
            min_length=1,
            max_length=400
        ))

    async def callback(self, intercation: discord.Interaction):
            # name = self.children[0].value
            # exp = self.children[1].value
            # fams = self.children[2].value
            # benefit = self.children[3].value
            # fight = self.children[4].value

            name, exp, fams, benefit, fight = map(lambda x: x.value, self.children)
            
            await intercation.response.send_message(f"**–í–∞—à –Ω–∏–∫ | –°—Ç–∞—Ç–∏–∫ | –ò–º—è:** ```{name}``` **–í–∞—à –æ–ø—ã—Ç –∏ –æ–Ω–ª–∞–π–Ω:** ```{exp}``` **–í –∫–∞–∫–∏—Ö —Å–µ–º—å—è—Ö –≤—ã –±—ã–ª–∏:** ```{fams}``` **–ü–æ—á–µ–º—É –∏–º–µ–Ω–Ω–æ –Ω–∞—à–∞ —Å–µ–º—å—è:** ```{benefit}``` **–í–∞—à–∏ –Ω–∞–≤—ã–∫–∏ —Å—Ç—Ä–µ–ª—å–±—ã:** ```{fight}```")
  

        

# @bot.command()
# async def showcase(ctx: discord.ApplicationContext):
#      pagesManager = Paginator(
#           pages=pages,
#           show_disabled=False,
#           show_menu=True,

#      )
#      await pagesManager.respond(
#           ctx.interaction,
#           target=bot.get_channel(1248728288470368418)
#    )

class MyView(View):
            
        @button(label="–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –≤ —Å–µ–º—å—é", style=discord.ButtonStyle.green, emoji="üìã")
        async def callback(self, button: discord.ui.Button, interaction: discord.Interaction):
            await interaction.response.send_modal(SurveyModal())
        
@bot.command()
async def application(ctx: discord.ApplicationContext):
     await ctx.respond("https://tenor.com/view/%D1%81-%D0%B4%D0%BD%D0%B5%D0%BC-%D1%80%D0%BE%D0%B6%D0%B4%D0%B5%D0%BD%D0%B8%D1%8F-gif-1024174821354942547", view=MyView())
async def showcase(ctx: discord.ApplicationContext):
            pagesManager = Paginator(
                pages=pages,
                show_disabled=False,
                show_menu=True,
            )

            await pagesManager.respond(
            ctx.interaction,
            target=bot.get_channel(1248728288470368418)
        )         

     
       
# @bot.command()
# async def survey(ctx: discord.ApplicationContext):
#     await ctx.send_modal(SurveyModal())

if __name__ == "__main__":
    bot.run(os.getenv("TOKEN"))
